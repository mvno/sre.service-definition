{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "https://mvno.dk/json/2021-11-18/sdfile.schema.json",
  "title": "Service Definition file",
  "description" : "Schema for service definition files used by Mvno",
  "type": "object",
  "properties": {
    "Description": {
      "description": "Fill out to get detailed info in the SCM about the service. Port and protocol are automatically added to the description.",
      "type": "string"
    },
    "Port": {
      "description": "Port number must be in the 13K-14K range.",
      "type": "integer",
      "exclusiveMinimum": 12999,
      "exclusiveMaximum": 15000
    },
    "CertificateHash": {
      "description": "Obsolete. Left for legacy purposes.",
      "type": "string"
    },
    "RunUnderAccount": {
      "description": "Defaults to Local which has the lowest degree of permissions like no database access.",
      "type": "string",
      "items": {
        "type": "string",
        "enum": [
          "AD",
          "Local",
          "Network",
          "System"
        ]
      }
    },
    "LocalDependencies": {
      "description": "Local services on the same machine which must be running before starting this service. Use '/' for multiple like so: \"Mvno.CustomerLogWriter/Mvno.Permission2\". LanmanWorkstation + TCP/IP are always added.",
      "type": "string"
    },
    "PingUrls": {
      "description": "Perform a ping on the listed URL's, separated by comma, which must answered with a 200 OK in order to complete deployment successfully. PingUrls may be Load Balancer configured so they might differ from port and protocol specified and are therefore treated separately.",
      "type": "string"
    },
    "ApiRoutesToPublish": {
      "description": "If specified, and a kubernetes cluster is included in the deploy, it will setup these URL's to forward to the deployed service.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "UiRoutesToServe": {
      "description": "If specified, and a kubernetes cluster is included in the deploy, it will setup these URL's to forward to the deployed service.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Namespace": {
      "description": "Describes which kubernetes namespace the application will run under",
      "type": "string",
      "items": {
        "type": "string",
        "enum": [
          "default",
          "api-gateway",
          "kube-node-lease",
          "kube-public",
          "kube-system",
          "logging",
          "monitoring",
          "pipeline",
          "sysdig-agent"
        ]
      }
    },
    "RequestTimeout": {
      "description": "Timeout for incoming requests for the fields ApiRoutesToPublish and UiRoutesToServe in milliseconds.",
      "type": "integer",
      "exclusiveMinimum": 0
    },
    "Replicas": {
      "description": "Number of pods running in kubernetes.",
      "type": "integer",
      "exclusiveMinimum": 0
    },
    "Scaling": {
      "description": "Enables autoscaling in kubernetes based on load.",
      "type": "boolean"
    },
    "Resources": {
      "description": "Describes the amount of compute resources the pod will have available.",
      "type": "object",
      "properties": {
        "CpuMin": {
          "description": "Minimum of CPU units available by the pod. in the format milli-CPU \"100m\". 1000 units equals 1 CPU.",
          "type": "string"
        },
        "CpuMax": {
          "description": "Maximum of CPU units available by the pod. in the format milli-CPU \"100m\". 1000 units equals 1 CPU.",
          "type": "string"
        },
        "MemoryMin": {
          "description": "The minimum amount of memory available to the pod. E.g. \"64Mi\" for 64 megabit, \"2Gi\" for 2 gigabit etc.",
          "type": "string"
        },
        "MemoryMax": {
          "description": "The maximum amount of memory available to the pod. E.g. \"64Mi\" for 64 megabit, \"2Gi\" for 2 gigabit etc.",
          "type": "string"
        }
      }
    },
    "Databases": {
      "description": "Describes which databases the pod will have access to.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "Name": {
            "description": "The name of the database.",
            "type": "string"
          },
          "Schemas": {
            "description": "The schemas which the pod needs access to.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "InitContainers": {
      "description": "Additional init containers that can be run before deploying the service to the pod.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "GrantContainerAccessToSettings": {
      "description": "Gives the pod access to the local /settings folder.",
      "type": "boolean"
    },
    "ServiceAccount": {
      "description": "Overrules the service account that the pod will be run under.",
      "type": "string"
    }
  }
}
